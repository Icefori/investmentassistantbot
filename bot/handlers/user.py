from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes, ConversationHandler
from bot.db import connect_db
import pytz
from datetime import datetime
import re
import aiohttp

from geopy.geocoders import Nominatim
from timezonefinder import TimezoneFinder

ASK_NAME, ASK_TIMEZONE, ASK_CUSTOM_TIMEZONE = range(3)

TIMEZONES = [
    "–ê—Å—Ç–∞–Ω–∞", "–ú–æ—Å–∫–≤–∞", "–ê–º—Å—Ç–µ—Ä–¥–∞–º", "–î—Ä—É–≥–∞—è –∑–æ–Ω–∞"
]
CITY_TZ = {
    "–ê—Å—Ç–∞–Ω–∞": "Asia/Almaty",
    "–ú–æ—Å–∫–≤–∞": "Europe/Moscow",
    "–ê–º—Å—Ç–µ—Ä–¥–∞–º": "Europe/Amsterdam"
}

from bot.utils.menu import reply_markup

GEONAMES_USERNAME = "icefori"  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π username –Ω–∞ geonames.org

async def is_registered(user_id: int) -> bool:
    conn = await connect_db()
    user = await conn.fetchrow("SELECT 1 FROM users WHERE user_id = $1", user_id)
    await conn.close()
    return user is not None

async def start_registration(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    conn = await connect_db()
    user = await conn.fetchrow("SELECT 1 FROM users WHERE user_id = $1", user_id)
    await conn.close()
    if user:
        await update.message.reply_text(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
            reply_markup=reply_markup
        )
        return ConversationHandler.END
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞!\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è? (–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è) üòä",
        reply_markup=ReplyKeyboardRemove()
    )
    return ASK_NAME

async def ask_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    name = update.message.text.strip()
    if not name or len(name) < 3 or len(name) > 30 or not re.match(r"^[A-Za-z–ê-–Ø–∞-—è–Å—ë\s\-]+$", name):
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è (–æ—Ç 3 –¥–æ 30 –±—É–∫–≤, –±–µ–∑ —Ü–∏—Ñ—Ä –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤)."
        )
        return ASK_NAME
    context.user_data["name"] = name
    kb = [[tz] for tz in TIMEZONES]
    await update.message.reply_text(
        f"–°–ø–∞—Å–∏–±–æ, {name}! üôè\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥/—á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ '–î—Ä—É–≥–∞—è –∑–æ–Ω–∞', –µ—Å–ª–∏ –≤–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ:",
        reply_markup=ReplyKeyboardMarkup(kb, one_time_keyboard=True, resize_keyboard=True)
    )
    return ASK_TIMEZONE

async def ask_timezone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tz = update.message.text.strip()
    if tz not in TIMEZONES:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥/—á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ '–î—Ä—É–≥–∞—è –∑–æ–Ω–∞'."
        )
        return ASK_TIMEZONE
    if tz == "–î—Ä—É–≥–∞—è –∑–æ–Ω–∞":
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –∂–∏–≤—ë—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ö–æ–∫—à–µ—Ç–∞—É, –ö–∞—Ä–∞–≥–∞–Ω–¥–∞, –ë–µ—Ä–ª–∏–Ω, –ù—å—é-–ô–æ—Ä–∫) –∏–ª–∏ –±–ª–∏–∂–∞–π—à–∏–π –∫—Ä—É–ø–Ω—ã–π –≥–æ—Ä–æ–¥/—Å—Ç–æ–ª–∏—Ü—É.\n"
            "–Ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—é –≤–∞—à —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."
        )
        return ASK_CUSTOM_TIMEZONE
    tz_name = CITY_TZ[tz]
    context.user_data["timezone"] = tz_name
    return await finish_registration(update, context)

async def ask_custom_timezone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    tz_input = update.message.text.strip()
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –∫–∞–∫ pytz-—Ç–∞–π–º–∑—É–Ω–∞
    try:
        pytz.timezone(tz_input)
        context.user_data["timezone"] = tz_input
        return await finish_registration(update, context)
    except Exception:
        pass

    # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≥–æ—Ä–æ–¥–∞ —á–µ—Ä–µ–∑ geopy (–Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ)
    geolocator = Nominatim(user_agent="investmentbot")
    location = None
    for lang in ["en", "ru", "uk"]:
        try:
            location = geolocator.geocode(tz_input, language=lang)
            if location:
                break
        except Exception:
            continue

    if location:
        lat, lng = location.latitude, location.longitude
        tf = TimezoneFinder()
        tz_found = tf.timezone_at(lng=lng, lat=lat)
        if tz_found:
            context.user_data["timezone"] = tz_found
            return await finish_registration(update, context)

    await update.message.reply_text(
        "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–∞–π–º–∑–æ–Ω—É –∏–ª–∏ –≥–æ—Ä–æ–¥. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: –ö–æ–∫—à–µ—Ç–∞—É, –öyiv, Astana, –ö–∞—Ä–∞–≥–∞–Ω–¥–∞, Berlin, Europe/Berlin, Asia/Almaty, America/New_York."
    )
    return ASK_CUSTOM_TIMEZONE

async def finish_registration(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    username = update.effective_user.username
    name = context.user_data.get("name")
    timezone = context.user_data.get("timezone")
    conn = await connect_db()
    await conn.execute(
        "INSERT INTO users (user_id, username, name, timezone) VALUES ($1, $2, $3, $4)",
        user_id, username, name, timezone
    )
    await conn.close()
    await update.message.reply_text(
        f"üéâ –°–ø–∞—Å–∏–±–æ, {name}! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.\n"
        f"–í–∞—à –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {timezone}\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:\n"
        "‚Ä¢ –î–æ–±–∞–≤–ª—è—Ç—å —Å–¥–µ–ª–∫–∏ (–∫–Ω–æ–ø–∫–∞ ‚ûï –°–¥–µ–ª–∫–∞)\n"
        "‚Ä¢ –°–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å (–∫–Ω–æ–ø–∫–∞ üìä –ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å)\n"
        "‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å –≤ Excel (–∫–Ω–æ–ø–∫–∞ üì§ –≠–∫—Å–ø–æ—Ä—Ç)\n\n"
        "–í –±—É–¥—É—â–µ–º –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ç–∞—Ä–∏—Ñ—ã! üöÄ",
        reply_markup=reply_markup
    )
    return ConversationHandler.END